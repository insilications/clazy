From 0dfd56077859af467e296e86426b1067a0d7e138 Mon Sep 17 00:00:00 2001
From: insilications <boboniboni@gmail.com>
Date: Tue, 29 Dec 2020 08:25:29 -0300
Subject: [PATCH] LINK_CLAZY_TO_LLVM OFF

---
 CMakeLists.txt | 94 +++++++++++++++++++++++++++++++++++++++++++-------
 1 file changed, 81 insertions(+), 13 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 46173fa..5466d6d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -44,7 +44,7 @@ add_definitions(-D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS)
 add_definitions(-D_GNU_SOURCE -DHAVE_CLANG_CONFIG_H)
 
 option(CLAZY_AST_MATCHERS_CRASH_WORKAROUND "Disable AST Matchers if being built with clang. See bug #392223" ON)
-option(LINK_CLAZY_TO_LLVM "Links the clazy plugin to LLVM. Switch to OFF if your clang binary has all symbols already. Might need to be OFF if your LLVM is static." ON)
+option(LINK_CLAZY_TO_LLVM "Links the clazy plugin to LLVM. Switch to OFF if your clang binary has all symbols already. Might need to be OFF if your LLVM is static." OFF)
 option(APPIMAGE_HACK "Links the clazy plugin to the clang tooling libs only. For some reason this is needed when building on our old CentOS 6.8 to create the AppImage." OFF)
 option(CLAZY_MAN_PAGE "Builds the man page." ON)
 
@@ -127,14 +127,13 @@ macro(link_to_llvm name is_standalone)
   endif()
 
   foreach(llvm_lib ${LLVM_LIBS})
-    if(NOT ${is_standalone} AND NOT APPLE AND NOT MINGW AND NOT MSVC)
-        ## Don't link against LLVMSupport, causes: CommandLine Error: Option 'view-background' registered more than once!
-        if (NOT llvm_lib MATCHES ".*LLVMSupport.*")
-            target_link_libraries(${name} ${llvm_lib})
-        endif()
-    else()
-        target_link_libraries(${name} ${llvm_lib})
-    endif()
+    #if(NOT ${is_standalone} AND NOT APPLE AND NOT MINGW AND NOT MSVC)
+        #if (NOT llvm_lib MATCHES ".*LLVMSupport.*")
+            #target_link_libraries(${name} ${llvm_lib})
+        #endif()
+    #else()
+  target_link_libraries(${name} ${llvm_lib})
+    #endif()
   endforeach()
 
   foreach(user_lib ${USER_LIBS})
@@ -156,7 +155,7 @@ endmacro()
 macro(add_clang_plugin name)
   set(srcs ${ARGN})
 
-  add_library(${name} SHARED ${srcs})
+  add_library(${name} STATIC ${srcs})
 
   if(${CMAKE_VERSION} VERSION_GREATER_EQUAL "3.16.0")
       # 30% speedup
@@ -265,9 +264,78 @@ if (NOT CLAZY_BUILD_WITH_CLANG)
   set(CPACK_PACKAGE_VERSION_PATCH ${CLAZY_VERSION_PATCH})
   include(CPack)
 else()
-  set(LLVM_LINK_COMPONENTS
-    Support
-    )
+  #set(LLVM_LINK_COMPONENTS
+    #XRay
+    #WindowsManifest
+    #TableGen
+    #Symbolize
+    #DebugInfoPDB
+    #OrcJIT
+    #OrcError
+    #JITLink
+    #ObjectYAML
+    #MIRParser
+    #MCA
+    #LTO
+    #ObjCARCOpts
+    #Extensions
+    #Polly
+    #PollyISL
+    #Passes
+    #Coroutines
+    #ipo
+    #Instrumentation
+    #Vectorize
+    #Linker
+    #IRReader
+    #AsmParser
+    #FrontendOpenMP
+    #LineEditor
+    #LibDriver
+    #Interpreter
+    #FuzzMutate
+    #MCJIT
+    #ExecutionEngine
+    #RuntimeDyld
+    #DWARFLinker
+    #DlltoolDriver
+    #Option
+    #DebugInfoGSYM
+    #Coverage
+    #X86Disassembler
+    #X86AsmParser
+    #X86CodeGen
+    #CFGuard
+    #GlobalISel
+    #SelectionDAG
+    #AsmPrinter
+    #DebugInfoDWARF
+    #CodeGen
+    #Target
+    #ScalarOpts
+    #InstCombine
+    #AggressiveInstCombine
+    #TransformUtils
+    #BitWriter
+    #Analysis
+    #ProfileData
+    #Object
+    #TextAPI
+    #MCParser
+    #BitReader
+    #Core
+    #Remarks
+    #BitstreamReader
+    #X86Desc
+    #MCDisassembler
+    #MC
+    #DebugInfoCodeView
+    #DebugInfoMSF
+    #BinaryFormat
+    #X86Info
+    #Support
+    #Demangle
+    #)
   add_clang_library(clazyPlugin
     ${CLAZY_PLUGIN_SRCS}
 
-- 
2.28.0

