From f9084f6a63088f9c938c45871b484c25e02303bd Mon Sep 17 00:00:00 2001
From: insilications <boboniboni@gmail.com>
Date: Sat, 2 Jan 2021 03:53:46 -0300
Subject: [PATCH 2/3] Fix1

---
 src/FixItExporter.cpp                              | 2 +-
 src/Utils.cpp                                      | 2 +-
 src/checkbase.cpp                                  | 2 +-
 src/checks/manuallevel/qproperty-type-mismatch.cpp | 2 +-
 4 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/FixItExporter.cpp b/src/FixItExporter.cpp
index 44240cf..eb3e28d 100644
--- a/src/FixItExporter.cpp
+++ b/src/FixItExporter.cpp
@@ -27,7 +27,7 @@
 #include <clang/Basic/SourceManager.h>
 #include <clang/Rewrite/Frontend/FixItRewriter.h>
 
-// #define DEBUG_FIX_IT_EXPORTER
+#define DEBUG_FIX_IT_EXPORTER
 
 using namespace clang;
 
diff --git a/src/Utils.cpp b/src/Utils.cpp
index 27f3803..9136a0e 100644
--- a/src/Utils.cpp
+++ b/src/Utils.cpp
@@ -922,7 +922,7 @@ string Utils::filenameForLoc(SourceLocation loc, const clang::SourceManager &sm)
     if (loc.isMacroID())
         loc = sm.getExpansionLoc(loc);
 
-    const string filename = static_cast<string>(sm.getFilename(loc));
+    const std::string filename = static_cast<std::string>(sm.getFilename(loc));
     auto splitted = clazy::splitString(filename, '/');
     if (splitted.empty())
         return {};
diff --git a/src/checkbase.cpp b/src/checkbase.cpp
index f5936df..873e040 100644
--- a/src/checkbase.cpp
+++ b/src/checkbase.cpp
@@ -202,7 +202,7 @@ bool CheckBase::shouldIgnoreFile(SourceLocation loc) const
     if (!loc.isValid())
         return true;
 
-    string filename = static_cast<string>(sm().getFilename(loc));
+    std::string filename = static_cast<std::string>(sm().getFilename(loc));
 
     return clazy::any_of(m_filesToIgnore, [filename](const std::string &ignored) {
         return clazy::contains(filename, ignored);
diff --git a/src/checks/manuallevel/qproperty-type-mismatch.cpp b/src/checks/manuallevel/qproperty-type-mismatch.cpp
index 01ddb1f..97981a2 100644
--- a/src/checks/manuallevel/qproperty-type-mismatch.cpp
+++ b/src/checks/manuallevel/qproperty-type-mismatch.cpp
@@ -237,7 +237,7 @@ void QPropertyTypeMismatch::VisitMacroExpands(const clang::Token &MacroNameTok,
 
     CharSourceRange crange = Lexer::getAsCharRange(range, sm(), lo());
 
-    string text = static_cast<string>(Lexer::getSourceText(crange, sm(), lo()));
+    std::string text = static_cast<std::string>(Lexer::getSourceText(crange, sm(), lo()));
     if (!text.empty() && text.back() == ')')
         text.pop_back();
 
-- 
2.28.0

